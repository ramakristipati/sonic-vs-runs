REQ: tg_connect(port_list=['1/1', '1/2', '1/3', '1/4', '1/5', '1/6', '1/7', '1/8'])
RESP: tg_connect {"port_handle": {"1/1": "port-1", "1/2": "port-2", "1/3": "port-3", "1/4": "port-4", "1/5": "port-5", "1/6": "port-6", "1/7": "port-7", "1/8": "port-8"}, "status": 1}
REQ: tg_interface_config(port_handle='port-1',mode='config',intf_ip_addr='6.0.0.2',gateway='6.0.0.1',netmask='255.255.0.0',arp_send_req='1')
RESP: tg_interface_config {"status": "1", "handle": "iface-1-0"}
REQ: tg_interface_config(port_handle='port-5',mode='config',intf_ip_addr='7.0.0.2',gateway='7.0.0.1',netmask='255.255.0.0',arp_send_req='1')
RESP: tg_interface_config {"status": "1", "handle": "iface-5-0"}
REQ: tg_traffic_config(port_handle='port-1',mode='create',duration='5',transmit_mode='continuous',length_mode='fixed',port_handle2='port-5',rate_pps=100,mac_src='00.00.00.11.12.53',mac_dst='52:54:00:12:34:56',ip_src_addr='6.0.0.3',ip_dst_addr='7.0.0.3',l3_protocol='ipv4',ip_src_mode='increment',ip_src_count=1000,ip_src_step='0.0.0.1')
RESP: tg_traffic_config {"stream_id": "stream-1-0"}
REQ: tg_traffic_control(action='clear_stats',port_handle='port-1')
RESP: tg_traffic_control True
REQ: tg_traffic_control(action='clear_stats',port_handle='port-5')
RESP: tg_traffic_control True
REQ: tg_traffic_control(action='run',stream_handle=dict_values(['stream-1-0'])[<class 'dict_values'>],duration=5)
RESP: tg_traffic_control True
REQ: tg_traffic_control(action='stop',stream_handle=dict_values(['stream-1-0'])[<class 'dict_values'>])
RESP: tg_traffic_control True
REQ: tg_traffic_stats(port_handle='port-1',mode='aggregate')
RESP: tg_traffic_stats {"status": "1", "waiting_for_stats": "0", "port-1": {"aggregate": {"tx": {"total_pkt_rate": 1, "raw_pkt_count": 485, "pkt_byte_count": 31040, "total_pkts": 485, "name": ""}, "rx": {"total_pkt_rate": 1, "raw_pkt_rate": 1, "raw_pkt_count": 214, "pkt_byte_count": 9209, "total_pkts": 214, "oversize_count": 0, "name": "port-1"}}, "name": "eth1"}}
REQ: tg_traffic_stats(port_handle='port-5',mode='aggregate')
RESP: tg_traffic_stats {"status": "1", "waiting_for_stats": "0", "port-5": {"aggregate": {"tx": {"total_pkt_rate": 1, "raw_pkt_count": 0, "pkt_byte_count": 0, "total_pkts": 0, "name": ""}, "rx": {"total_pkt_rate": 1, "raw_pkt_rate": 1, "raw_pkt_count": 1, "pkt_byte_count": 263, "total_pkts": 1, "oversize_count": 0, "name": "port-5"}}, "name": "eth5"}}
REQ: tg_traffic_control(action='reset',port_handle=['port-1', 'port-5', 'port-6'])
RESP: tg_traffic_control True
REQ: tg_traffic_control(action='clear_stats',port_handle=['port-1', 'port-5', 'port-6'])
RESP: tg_traffic_control True
REQ: tg_interface_config(port_handle='port-1',mode='config',intf_ip_addr='100.168.1.1',gateway='100.168.1.2',src_mac_addr='00:00:00:00:00:0A',arp_send_req='1')
RESP: tg_interface_config {"status": "1", "handle": "iface-1-0"}
REQ: tg_interface_config(port_handle='port-5',mode='config',intf_ip_addr='100.168.3.3',gateway='100.168.3.1',src_mac_addr='00:00:00:00:00:0B',arp_send_req='1')
RESP: tg_interface_config {"status": "1", "handle": "iface-5-0"}
REQ: tg_interface_config(port_handle='port-6',mode='config',intf_ip_addr='100.168.4.4',gateway='100.168.4.1',src_mac_addr='00:00:00:00:00:0C',arp_send_req='1')
RESP: tg_interface_config {"status": "1", "handle": "iface-6-0"}
REQ: tg_interface_config(port_handle='port-6',mode='config',ipv6_intf_addr='2001::2',ipv6_prefix_length='64',ipv6_gateway='2001::1',arp_send_req='1')
RESP: tg_interface_config {"status": "1", "handle": "iface-6-1"}
REQ: tg_traffic_config(port_handle='port-1',mode='create',transmit_mode='continuous',pkts_per_burst=100000,ip_protocol='17',length_mode='fixed',rate_pps=100000,l3_protocol='ipv4',mac_src='00:00:00:00:00:0A',mac_dst='52:54:00:12:34:56',ip_src_addr='100.168.1.1',ip_dst_addr='100.168.3.3',l4_protocol='tcp',high_speed_result_analysis=0)
RESP: tg_traffic_config {"stream_id": "stream-1-0"}
REQ: tg_packet_control(port_handle='port-6',action='start')
RESP: tg_packet_control True
REQ: tg_traffic_control(action='run',handle='stream-1-0')
RESP: tg_traffic_control True
REQ: tg_traffic_control(action='stop',handle='stream-1-0')
RESP: tg_traffic_control True
REQ: tg_packet_control(port_handle='port-6',action='stop')
RESP: tg_packet_control 1
REQ: tg_packet_stats(port_handle='port-6',format='var',output_type='hex')
RESP: tg_packet_stats {"status": "1", "port-6": {"aggregate": {"num_frames": 1}, "frame": {"0": {"length": 42, "frame_pylist": ["00", "00", "00", "00", "00", "0C", "52", "54", "00", "12", "34", "56", "08", "06", "00", "01", "08", "00", "06", "04", "00", "01", "52", "54", "00", "12", "34", "56", "64", "A8", "04", "01", "00", "00", "00", "00", "00", "00", "64", "A8", "04", "04"], "frame": "00 00 00 00 00 0C 52 54 00 12 34 56 08 06 00 01 08 00 06 04 00 01 52 54 00 12 34 56 64 A8 04 01 00 00 00 00 00 00 64 A8 04 04"}}}}
REQ: tg_packet_control(port_handle='port-6',action='start')
RESP: tg_packet_control True
REQ: tg_traffic_control(action='run',handle='stream-1-0')
RESP: tg_traffic_control True
REQ: tg_traffic_control(action='stop',handle='stream-1-0')
RESP: tg_traffic_control True
REQ: tg_packet_control(port_handle='port-6',action='stop')
RESP: tg_packet_control 3
REQ: tg_packet_stats(port_handle='port-6',format='var',output_type='hex')
RESP: tg_packet_stats {"status": "1", "port-6": {"aggregate": {"num_frames": 3}, "frame": {"0": {"length": 263, "frame_pylist": ["01", "80", "C2", "00", "00", "0E", "52", "54", "00", "12", "34", "56", "88", "CC", "02", "07", "04", "52", "54", "00", "80", "A2", "3F", "04", "0D", "07", "66", "6F", "72", "74", "79", "47", "69", "67", "45", "30", "2F", "34", "06", "02", "00", "78", "0A", "05", "73", "6F", "6E", "69", "63", "0C", "83", "53", "4F", "4E", "69", "43", "20", "53", "6F", "66", "74", "77", "61", "72", "65", "20", "56", "65", "72", "73", "69", "6F", "6E", "3A", "20", "53", "4F", "4E", "69", "43", "2E", "32", "30", "32", "31", "31", "31", "2E", "34", "34", "30", "39", "37", "37", "2D", "66", "32", "61", "32", "39", "30", "36", "62", "36", "20", "2D", "20", "48", "77", "53", "6B", "75", "3A", "20", "46", "6F", "72", "63", "65", "31", "30", "2D", "53", "36", "30", "30", "30", "20", "2D", "20", "44", "69", "73", "74", "72", "69", "62", "75", "74", "69", "6F", "6E", "3A", "20", "44", "65", "62", "69", "61", "6E", "20", "31", "31", "2E", "37", "20", "2D", "20", "4B", "65", "72", "6E", "65", "6C", "3A", "20", "35", "2E", "31", "30", "2E", "30", "2D", "38", "2D", "32", "2D", "61", "6D", "64", "36", "34", "0E", "04", "00", "9C", "00", "14", "10", "0C", "05", "01", "C0", "A8", "7A", "35", "02", "00", "00", "00", "02", "00", "10", "18", "11", "02", "FD", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "01", "02", "00", "00", "00", "15", "00", "08", "09", "45", "74", "68", "65", "72", "6E", "65", "74", "34", "FE", "09", "00", "12", "0F", "03", "01", "00", "00", "00", "00", "FE", "09", "00", "12", "0F", "01", "00", "80", "00", "00", "0B", "00", "00"], "frame": "01 80 C2 00 00 0E 52 54 00 12 34 56 88 CC 02 07 04 52 54 00 80 A2 3F 04 0D 07 66 6F 72 74 79 47 69 67 45 30 2F 34 06 02 00 78 0A 05 73 6F 6E 69 63 0C 83 53 4F 4E 69 43 20 53 6F 66 74 77 61 72 65 20 56 65 72 73 69 6F 6E 3A 20 53 4F 4E 69 43 2E 32 30 32 31 31 31 2E 34 34 30 39 37 37 2D 66 32 61 32 39 30 36 62 36 20 2D 20 48 77 53 6B 75 3A 20 46 6F 72 63 65 31 30 2D 53 36 30 30 30 20 2D 20 44 69 73 74 72 69 62 75 74 69 6F 6E 3A 20 44 65 62 69 61 6E 20 31 31 2E 37 20 2D 20 4B 65 72 6E 65 6C 3A 20 35 2E 31 30 2E 30 2D 38 2D 32 2D 61 6D 64 36 34 0E 04 00 9C 00 14 10 0C 05 01 C0 A8 7A 35 02 00 00 00 02 00 10 18 11 02 FD 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 02 00 00 00 15 00 08 09 45 74 68 65 72 6E 65 74 34 FE 09 00 12 0F 03 01 00 00 00 00 FE 09 00 12 0F 01 00 80 00 00 0B 00 00"}, "1": {"length": 263, "frame_pylist": ["01", "80", "C2", "00", "00", "0E", "52", "54", "00", "12", "34", "56", "88", "CC", "02", "07", "04", "52", "54", "00", "80", "A2", "3F", "04", "0D", "07", "66", "6F", "72", "74", "79", "47", "69", "67", "45", "30", "2F", "34", "06", "02", "00", "78", "0A", "05", "73", "6F", "6E", "69", "63", "0C", "83", "53", "4F", "4E", "69", "43", "20", "53", "6F", "66", "74", "77", "61", "72", "65", "20", "56", "65", "72", "73", "69", "6F", "6E", "3A", "20", "53", "4F", "4E", "69", "43", "2E", "32", "30", "32", "31", "31", "31", "2E", "34", "34", "30", "39", "37", "37", "2D", "66", "32", "61", "32", "39", "30", "36", "62", "36", "20", "2D", "20", "48", "77", "53", "6B", "75", "3A", "20", "46", "6F", "72", "63", "65", "31", "30", "2D", "53", "36", "30", "30", "30", "20", "2D", "20", "44", "69", "73", "74", "72", "69", "62", "75", "74", "69", "6F", "6E", "3A", "20", "44", "65", "62", "69", "61", "6E", "20", "31", "31", "2E", "37", "20", "2D", "20", "4B", "65", "72", "6E", "65", "6C", "3A", "20", "35", "2E", "31", "30", "2E", "30", "2D", "38", "2D", "32", "2D", "61", "6D", "64", "36", "34", "0E", "04", "00", "9C", "00", "14", "10", "0C", "05", "01", "C0", "A8", "7A", "35", "02", "00", "00", "00", "02", "00", "10", "18", "11", "02", "FD", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "01", "02", "00", "00", "00", "15", "00", "08", "09", "45", "74", "68", "65", "72", "6E", "65", "74", "34", "FE", "09", "00", "12", "0F", "03", "01", "00", "00", "00", "00", "FE", "09", "00", "12", "0F", "01", "00", "80", "00", "00", "0B", "00", "00"], "frame": "01 80 C2 00 00 0E 52 54 00 12 34 56 88 CC 02 07 04 52 54 00 80 A2 3F 04 0D 07 66 6F 72 74 79 47 69 67 45 30 2F 34 06 02 00 78 0A 05 73 6F 6E 69 63 0C 83 53 4F 4E 69 43 20 53 6F 66 74 77 61 72 65 20 56 65 72 73 69 6F 6E 3A 20 53 4F 4E 69 43 2E 32 30 32 31 31 31 2E 34 34 30 39 37 37 2D 66 32 61 32 39 30 36 62 36 20 2D 20 48 77 53 6B 75 3A 20 46 6F 72 63 65 31 30 2D 53 36 30 30 30 20 2D 20 44 69 73 74 72 69 62 75 74 69 6F 6E 3A 20 44 65 62 69 61 6E 20 31 31 2E 37 20 2D 20 4B 65 72 6E 65 6C 3A 20 35 2E 31 30 2E 30 2D 38 2D 32 2D 61 6D 64 36 34 0E 04 00 9C 00 14 10 0C 05 01 C0 A8 7A 35 02 00 00 00 02 00 10 18 11 02 FD 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 02 00 00 00 15 00 08 09 45 74 68 65 72 6E 65 74 34 FE 09 00 12 0F 03 01 00 00 00 00 FE 09 00 12 0F 01 00 80 00 00 0B 00 00"}, "2": {"length": 263, "frame_pylist": ["01", "80", "C2", "00", "00", "0E", "52", "54", "00", "12", "34", "56", "88", "CC", "02", "07", "04", "52", "54", "00", "80", "A2", "3F", "04", "0D", "07", "66", "6F", "72", "74", "79", "47", "69", "67", "45", "30", "2F", "34", "06", "02", "00", "78", "0A", "05", "73", "6F", "6E", "69", "63", "0C", "83", "53", "4F", "4E", "69", "43", "20", "53", "6F", "66", "74", "77", "61", "72", "65", "20", "56", "65", "72", "73", "69", "6F", "6E", "3A", "20", "53", "4F", "4E", "69", "43", "2E", "32", "30", "32", "31", "31", "31", "2E", "34", "34", "30", "39", "37", "37", "2D", "66", "32", "61", "32", "39", "30", "36", "62", "36", "20", "2D", "20", "48", "77", "53", "6B", "75", "3A", "20", "46", "6F", "72", "63", "65", "31", "30", "2D", "53", "36", "30", "30", "30", "20", "2D", "20", "44", "69", "73", "74", "72", "69", "62", "75", "74", "69", "6F", "6E", "3A", "20", "44", "65", "62", "69", "61", "6E", "20", "31", "31", "2E", "37", "20", "2D", "20", "4B", "65", "72", "6E", "65", "6C", "3A", "20", "35", "2E", "31", "30", "2E", "30", "2D", "38", "2D", "32", "2D", "61", "6D", "64", "36", "34", "0E", "04", "00", "9C", "00", "14", "10", "0C", "05", "01", "C0", "A8", "7A", "35", "02", "00", "00", "00", "02", "00", "10", "18", "11", "02", "FD", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "00", "01", "02", "00", "00", "00", "15", "00", "08", "09", "45", "74", "68", "65", "72", "6E", "65", "74", "34", "FE", "09", "00", "12", "0F", "03", "01", "00", "00", "00", "00", "FE", "09", "00", "12", "0F", "01", "00", "80", "00", "00", "0B", "00", "00"], "frame": "01 80 C2 00 00 0E 52 54 00 12 34 56 88 CC 02 07 04 52 54 00 80 A2 3F 04 0D 07 66 6F 72 74 79 47 69 67 45 30 2F 34 06 02 00 78 0A 05 73 6F 6E 69 63 0C 83 53 4F 4E 69 43 20 53 6F 66 74 77 61 72 65 20 56 65 72 73 69 6F 6E 3A 20 53 4F 4E 69 43 2E 32 30 32 31 31 31 2E 34 34 30 39 37 37 2D 66 32 61 32 39 30 36 62 36 20 2D 20 48 77 53 6B 75 3A 20 46 6F 72 63 65 31 30 2D 53 36 30 30 30 20 2D 20 44 69 73 74 72 69 62 75 74 69 6F 6E 3A 20 44 65 62 69 61 6E 20 31 31 2E 37 20 2D 20 4B 65 72 6E 65 6C 3A 20 35 2E 31 30 2E 30 2D 38 2D 32 2D 61 6D 64 36 34 0E 04 00 9C 00 14 10 0C 05 01 C0 A8 7A 35 02 00 00 00 02 00 10 18 11 02 FD 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 02 00 00 00 15 00 08 09 45 74 68 65 72 6E 65 74 34 FE 09 00 12 0F 03 01 00 00 00 00 FE 09 00 12 0F 01 00 80 00 00 0B 00 00"}}}}
REQ: tg_traffic_control(action='reset',port_handle=['port-1', 'port-5'])
RESP: tg_traffic_control True
REQ: tg_interface_config(port_handle='port-1',mode='config',intf_ip_addr='192.168.11.2',gateway='192.168.11.1',src_mac_addr='00:0a:01:00:11:01',arp_send_req='1')
RESP: tg_interface_config {"status": "1", "handle": "iface-1-0"}
REQ: tg_interface_config(port_handle='port-5',mode='config',intf_ip_addr='192.168.13.2',gateway='192.168.13.1',src_mac_addr='00:0a:01:00:12:01',arp_send_req='1')
RESP: tg_interface_config {"status": "1", "handle": "iface-5-0"}
REQ: tg_traffic_config(port_handle='port-1',port_handle2='port-5',mode='create',transmit_mode='continuous',length_mode='fixed',l3_length=500,rate_pps=100,emulation_src_handle='iface-1-0',emulation_dst_handle='iface-5-0')
RESP: tg_traffic_config {"stream_id": "stream-1-0"}
REQ: tg_traffic_config(port_handle='port-5',port_handle2='port-1',mode='create',transmit_mode='continuous',length_mode='fixed',l3_length=500,rate_pps=100,emulation_src_handle='iface-5-0',emulation_dst_handle='iface-1-0')
RESP: tg_traffic_config {"stream_id": "stream-5-0"}
REQ: tg_traffic_control(action='reset',port_handle='port-5')
RESP: tg_traffic_control True
REQ: tg_interface_config(port_handle='port-5',mode='config',intf_ip_addr='193.1.1.2',gateway='193.1.1.1',netmask='255.255.255.0',arp_send_req='1')
RESP: tg_interface_config {"status": "1", "handle": "iface-5-0"}
REQ: tg_interface_config(port_handle='port-5',mode='config',ipv6_intf_addr='1093:1:1::2',ipv6_prefix_length='64',ipv6_gateway='1093:1:1::1',arp_send_req='1')
RESP: tg_interface_config {"status": "1", "handle": "iface-5-1"}
REQ: tg_traffic_control(action='reset',port_handle='port-1')
RESP: tg_traffic_control True
REQ: tg_interface_config(port_handle='port-1',mode='config',intf_ip_addr='193.2.1.2',gateway='193.2.1.1',netmask='255.255.255.0',arp_send_req='1')
RESP: tg_interface_config {"status": "1", "handle": "iface-1-0"}
REQ: tg_interface_config(port_handle='port-1',mode='config',ipv6_intf_addr='1093:2:1::2',ipv6_prefix_length='64',ipv6_gateway='1093:2:1::1',arp_send_req='1')
RESP: tg_interface_config {"status": "1", "handle": "iface-1-1"}
REQ: tg_emulation_bgp_config(handle='iface-5-0',mode='enable',active_connect_enable='1',local_as=63001,remote_as=65001,remote_ip_addr='193.1.1.1',enable_4_byte_as='1')
RESP: tg_emulation_bgp_config {"status": "1", "handle": "iface-5-0"}
REQ: tg_emulation_bgp_control(handle='iface-5-0',mode='start')
RESP: tg_emulation_bgp_control {"status": "1"}
REQ: tg_emulation_bgp_config(handle='iface-5-1',mode='enable',ip_version='6',active_connect_enable='1',local_as=63001,remote_as=65001,remote_ipv6_addr='1093:1:1::1',enable_4_byte_as='1')
RESP: tg_emulation_bgp_config {"status": "1", "handle": "iface-5-1"}
REQ: tg_emulation_bgp_control(handle='iface-5-1',mode='start')
RESP: tg_emulation_bgp_control {"status": "1"}
REQ: tg_emulation_bgp_config(handle='iface-1-0',mode='enable',active_connect_enable='1',local_as=65001,remote_as=65001,remote_ip_addr='193.2.1.1',enable_4_byte_as='1')
RESP: tg_emulation_bgp_config {"status": "1", "handle": "iface-1-0"}
REQ: tg_emulation_bgp_control(handle='iface-1-0',mode='start')
RESP: tg_emulation_bgp_control {"status": "1"}
REQ: tg_emulation_bgp_config(handle='iface-1-1',mode='enable',ip_version='6',active_connect_enable='1',local_as=65001,remote_as=65001,remote_ipv6_addr='1093:2:1::1',enable_4_byte_as='1')
RESP: tg_emulation_bgp_config {"status": "1", "handle": "iface-1-1"}
REQ: tg_emulation_bgp_control(handle='iface-1-1',mode='start')
RESP: tg_emulation_bgp_control {"status": "1"}
REQ: tg_emulation_bgp_route_config(handle='iface-1-1',mode='add',ip_version='6',num_routes='100',prefix='1001::1',as_path='as_seq:1')
RESP: tg_emulation_bgp_route_config {"status": "1", "handle": "bgp-route-1-1-0"}
REQ: tg_emulation_bgp_control(handle='iface-1-1',mode='start')
RESP: tg_emulation_bgp_control {"status": "1"}
REQ: tg_traffic_config(port_handle='port-5',emulation_src_handle='iface-5-1',emulation_dst_handle='bgp-route-1-1-0',circuit_endpoint_type='ipv6',mode='create',transmit_mode='single_burst',pkts_per_burst=100,length_mode='fixed',rate_pps=100)
RESP: tg_traffic_config {"stream_id": "stream-5-0"}
REQ: tg_traffic_control(action='clear_stats',port_handle='port-5')
RESP: tg_traffic_control True
REQ: tg_traffic_control(action='clear_stats',port_handle='port-1')
RESP: tg_traffic_control True
REQ: tg_traffic_control(action='run',handle='stream-5-0')
RESP: tg_traffic_control True
REQ: tg_traffic_control(action='stop',handle='stream-5-0')
RESP: tg_traffic_control True
REQ: tg_traffic_stats(port_handle='port-1',mode='aggregate')
RESP: tg_traffic_stats {"status": "1", "waiting_for_stats": "0", "port-1": {"aggregate": {"tx": {"total_pkt_rate": 1, "raw_pkt_count": 0, "pkt_byte_count": 0, "total_pkts": 0, "name": ""}, "rx": {"total_pkt_rate": 1, "raw_pkt_rate": 1, "raw_pkt_count": 11, "pkt_byte_count": 1473, "total_pkts": 11, "oversize_count": 0, "name": "port-1"}}, "name": "eth1"}}
REQ: tg_traffic_stats(port_handle='port-5',mode='aggregate')
RESP: tg_traffic_stats {"status": "1", "waiting_for_stats": "0", "port-5": {"aggregate": {"tx": {"total_pkt_rate": 1, "raw_pkt_count": 100, "pkt_byte_count": 6400, "total_pkts": 100, "name": ""}, "rx": {"total_pkt_rate": 1, "raw_pkt_rate": 1, "raw_pkt_count": 17, "pkt_byte_count": 2085, "total_pkts": 17, "oversize_count": 0, "name": "port-5"}}, "name": "eth5"}}
REQ: tg_emulation_bgp_control(handle='iface-1-1',mode='stop')
RESP: tg_emulation_bgp_control {"status": "1"}
REQ: tg_traffic_control(action='reset',port_handle='port-5')
RESP: tg_traffic_control True
REQ: tg_interface_config(port_handle='port-5',handle='iface-5-0',mode='destroy')
RESP: tg_interface_config {"status": "1"}
REQ: tg_interface_config(port_handle='port-5',handle='iface-5-1',mode='destroy')
RESP: tg_interface_config {"status": "1"}
REQ: tg_traffic_control(action='reset',port_handle='port-1')
RESP: tg_traffic_control True
REQ: tg_interface_config(port_handle='port-1',handle='iface-1-0',mode='destroy')
RESP: tg_interface_config {"status": "1"}
REQ: tg_interface_config(port_handle='port-1',handle='iface-1-1',mode='destroy')
RESP: tg_interface_config {"status": "1"}
REQ: tg_disconnect()
